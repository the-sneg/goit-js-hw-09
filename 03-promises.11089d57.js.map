{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SActC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MArBPL,EAAOY,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMT,GAASL,EAAOe,SAASV,MAAMW,MAC/BC,GAAQjB,EAAOe,SAASE,KAAKD,MAC7BE,GAAUlB,EAAOe,SAASG,OAAOF,OAkBzC,SAA0BX,EAAOY,EAAMC,GACrC,GAAIb,EAAQ,GAAKY,EAAO,GAAKC,EAAS,EACpC,OACEC,EAAArB,GAASsB,OAAOC,QAAQ,wCACpB,CACFC,QAAS,KAKf,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAChCpB,EAAcoB,EAAGlB,GACdmB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALpB,MACjBc,EAAArB,GAASsB,OAAOO,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANF,EAAM,MAC5C,CACAJ,QAAS,SAIdO,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALpB,MAClBc,EAAArB,GAASsB,OAAOU,QACd,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANF,EAAM,MAC3C,CACEJ,QAAS,SAIjBjB,GAASY,EA5CXc,CAAiB1B,EAAOY,EAAMC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const delay = +formEl.elements.delay.value;\n  const step = +formEl.elements.step.value;\n  const amount = +formEl.elements.amount.value;\n\n  generatePromises(delay, step, amount);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction generatePromises(delay, step, amount) {\n  if (delay < 0 || step < 0 || amount < 0) {\n    return (\n      Notiflix.Notify.warning('⚠️ Field value cannot be less than 0'),\n      {\n        timeout: 5000,\n      }\n    );\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            timeout: 5000,\n          }\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            timeout: 5000,\n          }\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","elements","value","step","amount","$parcel$interopDefault","Notify","warning","timeout","i","then","param","_$delay","success","concat","catch","failure","$ce04d3a99e08e73b$var$generatePromises"],"version":3,"file":"03-promises.11089d57.js.map"}